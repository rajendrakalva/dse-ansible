- name: Creates directory
  file: path={{ item }} state=directory owner=cassandra group=cassandra mode=0775
  with_items:
  - /mnt/data01
  - /mnt/data02
  - /mnt/commitlog
  register: created_directories


#- debug: var=Data_directories.results[0].path

#- name: Check the newly added disks
#  shell: ls /dev/sd[c-q]
#  register: "all_attached_disks"
#- debug: var=all_attached_disks.stdout_lines
#
#- name: Create the partition
#  shell: (/bin/echo n; /bin/echo p; /bin/echo ;/bin/echo ;/bin/echo ;/bin/echo w) | sudo /sbin/fdisk {{ item }} && touch /root/.created_partition
#  with_items: all_attached_disks.stdout_lines
#  args:
#   creates: /root/.created_partition

#- name: Create Filesystem
#  disk:
#  debug: name={{ item[0] }} src={{ item[1] }} fstype=ext4 state=present
#  debug: msg="Values are {{item[0]}} and {{item[1]}}"
#  with_nested:
#    - Data_directories
#    - all_attached_disks

- name: "Install util-linux"
  yum:
    name: '{{ item }}'
    state: 'present'
  with_flattened:
    - 'parted'
  when: disk_additional_disks
  tags:
    - disk
    - pkgs

- name: "Partition additional disks"
  shell: |
    if
        [ -b {{ item.disk }} ]
    then
        [ -b {{ item.disk }}1 ] || parted --script "{{ item.disk }}" mklabel msdos mkpart primary 1MiB 100%
    fi
  args:
    creates: '{{ item.disk }}1'
    executable: '/bin/bash'
  with_items: disk_additional_disks
  tags:
    - disk

- name: Create filesystem on the first partition
  filesystem:
    dev: '{{ item.disk }}1'
    force: '{{ item.force|d(omit) }}'
    fstype: '{{ item.fstype }}'
    opts: '{{ item.fsopts|d(omit) }}'
  with_items: disk_additional_disks
  tags:
    - disk

- name: "Ensure the mount directory exists"
  file: >
    path={{ item.mount }}
    owner={{ disk_user | default('cassandra') }}
    group={{ disk_group | default('cassandra') }}
    state=directory
  with_items: disk_additional_disks
  tags:
    - disk

- name: Get UUID for partition
  command: blkid -s UUID -o value "{{ item.disk }}1"
  register: disk_blkid
  with_items: disk_additional_disks
  changed_when: False
  tags:
    - disk

- name: "Mount additional disk"
  mount:
    name: '{{ item.0.mount }}'
    fstype: '{{ item.0.fstype }}'
    opts: '{{ item.0.mount_options|d(omit) }}'
    passno: '0'
    src: 'UUID={{ item.1.stdout }}'
    state: '{{ item.0.mount_state|d("mounted") }}'
  with_together:
    - '{{ disk_additional_disks }}'
    - '{{ disk_blkid.results }}'
  tags:
    - disk

- name: Create symlinks
  file: src='{{ item.mount }}' dest='{{ item.link_dir }}' owner=cassandra group=cassandra state=link
  with_items: disk_additional_disks
